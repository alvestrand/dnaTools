---
# General Vars {{{

# This label will define what your top-level SNP is called out of the (usually large number of) possible shared SNPs.

haplogroup: R
top_snp: U106

# These flags define what actually gets done
# Unless MAKEREPORT is non-zero, the other reports will be based on the current report.csv
# MAKEREPORT = do the main reduction and create report.csv, else use an existing one
# MAKEAGES = perform age analysis
# MAKESHORTREPORT = make a shorter version of the report, collapsing the singleton section and removing the shared and inconsistent list of SNPs
# MAKEHTMLTREE = make an HTML version of the tree for easier visualisation
# CHECKDATA = display warnings and create lists if inconsistencies detected in report (0 = no; >0 = yes)
# SKIPZIP = skip certain parts of the script: see below
# ZIPUPDATEONLY = don't re-extract that already exist # There's a bug here somewhere!
# TESTFORREFPOS = test for positives in the references sequence and swap if needed: see below

make_report: 1
make_ages: 1
make_short_report: 1
make_html_report: 1 
skip_zip: 3
check_data: 1
zip_up_date_only: 1
test_for_ref_pos: 0

# These flags set options for Jef Treece's unpacking script and other options
# They are not currently implemented

zip_dir: zip

# if you only want a subset; add -d if unzip dir is already populated

zip_set: -s 6:1,2,3,4,5,6

# 0/1 - if 1: only run bash script; do not run clades.py for any operations
# if setting to 1 when previously run w/ 0, clear out the unzip directory first

bash_only: 1

# 0/1 - if 1: drop and recreate the database if running with BASHONLY=0 -- takes a few minutes

recreate_db: 0

# Notes on SKIPZIP
# Set SKIPZIP to >0 skip the labour-intensive parts of the script. Requires MAKEREPORT=TRUE
# This should only be done if you have run the script before on the same dataset!
# If set to 1, unzipping and VCF/BED file scanning will be ignored
#    Statistics generation, sorting of already-identified variants into good/bad/shared lists and clade sorting will still take place
#    This requires a successful (but not necessarily sorted) previous run.
# If set to 2, statistics generation is skipped. The statistics INCLUDING KIT NAMES will be taken from the header of the previous run.
#    It also uses the ORDER of the previous run, taken from order.txt
#    This requires a complete successful previous run
# If set to 3, SNP names aren't updated either. The previous SNP names are used.

# Notes on TESTFORREFPOS
# This should be set for clades where the reference sequence contains positives
# For BigY, this includes clades in R1b-U152 and G2.
# Clades which include ancestral SNPs of these regions (e.g. R, R1, R1b-M343, R1b-M269, R1b-L11, R1b-P312, ...)
# should have this set. However, self-contained branches of these clades do not (e.g. R1b-U106)
# as test results should be all positive or all negative for the group.

# The following parameters set the mutation rate for the age analysis.
# The rate is set in SNP mutations per year per *billion* base pairs.
# RATE0 and RATE1 give the lower and upper bounds for the 95% confidence interval.
# The rate you should use varies depending on the region of the chromsome involved.
# Rates are numerically lower in palindromic regions (see Helgason et al. 2015 and our own analyses).

# Rates for entire BigY test
#RATE=0.751
#RATE0=0.688
#RATE1=0.814

# Rates for standardised age.bed restricted region
#RATE=0.8186
#RATE0=0.7589
#RATE1=0.8771
# Rates for new age.bed (v. 0.7.0)

rate: 0.8119
rate_0: 0.7529
rate_1: 0.8716

# ZEROAGE gives the date from which ages are computed
# ERRZEROAGE gives the (95% c.i.) +/- variation in this date for individual testers

zero_age: 1950.33
err_zero_age: 15.02

# That's it!

# List of required internal libraries:
#      positives-and-no-calls.py : This code reads the call status of SNPs from the BED files (Courtesy H.A.)
#      snps_hg19.csv : Contains SNP names. Can be updated, e.g.: wget http://ybrowse.org/gbrowse2/gff/snps_hg19.csv -O snps_hg19.csv
#      age.bed : Contains the regions used to count SNPs for age analysis.
#      poisson.tbl : A look-up table containing a matrix of Poisson functions
#      cpoisson.tbl : A look-up table containing 95% confidence intervals for cumulative Poisson statistics
#      events.svg : A customisable list of historical events to be included in the SVG file

# How to make a backup:
#      zip redux.zip redux.bash positives-and-no-calls.py age.bed poisson.tbl cpoisson.tbl implications.txt badlist.txt recurrencies.txt cladenames.txt events.svg treefoot.html merge-ignore.txt snps_hg19.csv 

# How to update cladenames.txt from a list of clades and substitutes in <official-tree.csv> formatted as:
# PARENT_SNP,
# ,CHILD_SNP
# ,CHILD_SNP
# awk 'NR==FNR {n[NR]=$1;o[NR]=$2;x=NR} NR!=FNR {for (i=1;i<=x;i++) if ($1==o[i] && $1!=n[i] && $1+0==0) print o[i],n[i]}' <(awk '$1!="" {split($1,pp," "); split(pp[1],p,"/")} $2!="" {split($2,qq," "); split(qq[1],q,"/")} NR>3 {if ($1=="") print p[1],q[1]; if ($2=="") print p[1],p[1]}' FS=, official-tree.csv  | sed 's/In://Ig' | grep '[0-9]') <(awk '{print $16}' final-ages.txt) >> cladenames.txt

# }}}
# Change Log vars {{{

VERSION: 1.0.1

# 1.0.1.20170802a - Added duplicate kit check
# 1.0.0.20170716a - Ratification of successful run on P312, allowing the expansion of code to R-L11
#                   Added haplogroup prefixes to clade names
#                   Changes to HTML output to allow file splitting
#                   Added (commented) code to allow file splitting of CSV and HTML reports
# 0.7.0.20170605a - Incorporates various additions from Jef Treece to allow P312 to work effectively
#					Bug fix arising in 0.6 regarding reference positives
#					Expanded age.bed file and substantially revised mutation rate
#					Fixed bug when more than 10 sub-clades were present
# 0.6.9.20170524a - EARLY RELEASE 1014
#					Fixed bug with sorting identical indels - thanks: Jef Treece
# 0.6.8.20170515a - EARLY RELEASE 991
#                   Added support for extended ASCII characters - thanks: Jef Treece
#                   Allowed selected SNPs to be removed from the merge list
# 0.6.7.20170404a - EARLY RELEASE 963
#                   Fixed bug with extra column generated - thanks: Jef Treece
#					Fixed bug with missing escaped characters in regex (?+) and (R) - thanks: Jef Treece
#					Fixed bug with commas in VCF files - thanks: Jef Treece
#					Fixed bug with returns in some VCF files - thanks: Jef Treece
#					Fixed bug in stats generation - thanks: Alex Williamson
#					Improved memory efficieny in sorting
#					Fixed BED counting bug - thanks: Alex Williamson
#					Standardised age.bed to conform to FTDNA standard
# 0.6.6.20170203a - Provided correct placement of recurrent SNPs
# 0.6.5.20170126a - EARLY RELEASE 871
#					Allowed combined "if (A+ & B+) then C+" implications
# 0.6.4.20170120a - EARLY RELEASE 861
#					Added header to SVG tree, swapped horizontal/vertical
# 0.6.3.20170110a - EARLY RELEAESE 844
#					Fixed bug with labelling column headers U106 regardless of $TOPSNP
#					Encoded basic SVG tree
#					Improved memory performance in horizontal sort
# 0.6.2.20161220a - Efficiency savings: option for only updating unzipped files
#					Efficiency savings: preliminary statistics generation
# 0.6.1.20161216a - Added test "newness" colour coding to HTML report
# 0.6.0.20161213b - Creating a basic working HTML report
# 0.5.4.20161213a - Fixed bug with merging identical insertions
#					Made data checking routines optional (CHECKDATA)
# 0.5.3.20161124a - EARLY RELEASE 783
#					Fixed bug with ref. seq. positive replacement
# 0.5.2.20161113a - Encoded test to check whether branches can be merged up
#					Encoded test to check and list forced positives
# 0.5.1.20161107a - Allowed correction of positives in reference sequence
# 0.5.0.20161102a - EARLY RELEASE 755
#					Fixed bug: added extra rows to Poisson tables
#					Improved efficiency of clade naming process
#					Included support for missing clades due to limited BigY coverage
#					Re-wrote setup instructions and restructured pre-amble
# 0.4.3.20161027a - EARLY RELEASE 748
#					Encoded clade naming preferences.
# 0.4.2.20161025b - Completed final ("top-down") age analysis with uncertainties
# 0.4.1.20161025a - Completed "bottom-up" age analysis with uncertainties
# 0.4.0.20161002a - Began setup for uncertainty analysis in age calculations
# 0.3.1.20160929a - EARLY RELEASE 733
#					Replaced BED file scanning with python script from Harald A.: dramatic speed improvement
#                   Introduced date information to header
#					Introduced calculation for age analysis coverage, reported in header
#					Introduced coverage restriction for age calculation
#					Introduced full age analysis (no uncertainty ranges yet)
#					Introduced key at top-left
#					Introduced clade listings at top of tree (not currently part of output)
# 0.3.0.20160909a - EARLY RELEASE 728: Added second auto-backup for fresh runs of the script
#					Introduced number of unique SNPs into age calculation
#					Introduced "top-down" age normalisation to account for causality
# 0.2.2.20160905a - EARLY RELEASE 723: Fixed bug in shared SNP counting involving presumed positives being counted twice
# 0.2.1.20160901a - BETA RELEASE (716): Introduced short report format
#					Introduced basic age calculation (based solely on SNP counts)
#					Fixed bug involving the NFILES parameter not being set on an initial run
#                   Moved backup location to be more intuitive
# 0.2.0.20160831a - Private release to Harald A.
#					Introduced SNP counts
#                   Encoded MAKE* flags to begin age analysis
#                   Encoded clade identification, tree formation and basic SNP counting
#					Fixed bug for multiple SNP names
#					Discontinued use of forced SNP names in favour of the single YBrowse output file
# 0.1.1.20160822a - BETA RELEASE (710): allowed basic compilation of report.csv

# }}}
# More Vars {{{

# Wish list / priority list:
# Including other tests:
#	Other tests (e.g. FGC YElite, FGC/YSeq WGS) could be included under the concept of "shared coverage"
#	The coverage for each clade could be computed as the number of base pairs accurately called in two or more sub-clades
#   In the case of BigY+BigY, shared coverage ~= 8.6 Mbp
#   In the case of BigY+YElite, shared coverage ~= 8.6 Mbp
#   In the case of YElite+YElite, shared coverage ~= 14 Mbp
#   Care would need to be taken that the appropriate mutation rate was used in each case
# Basic report: Identification of SNP clusters (Jim Kane's criterion: >1 SNP in 10 bp)
# Programming: sort memory issues with hsort
# Programming: check status of REJECTED SNPs with respect to calling and reference positives
# Programming: allow implications to select based on ancestral->derived as well as position
# Programming: allow recurrent SNPs to define a clade (e.g. Z3006)
# Programming: prevent recurrent SNP names from becoming clade labels
# HTML report: ensure clade name is prioritised (<STRONG>?)
# HTML report: links to YBrowse
# HTML report: list quality information
# HTML report: display age information
# HTML report: display Build 37 / 38 locations
# HTML report: list gene information?
# SVG report: fix header while scrolling
# SVG report: copy haplogroup label on click
# Basic report: intelligent support for "possible" clades [(?!) notation]
# Basic report: include GrCh37<->GrCh38 conversion (using CrossMap?) as new column
# Basic report: sorting criterion to match FTDNA tree
# Basic report: parallisation / further optimisation
# Basic report: ensure soft coding for number of prefix rows/columns to allow additional meta-data support
#				additional columns:
#					Build 38 position
#					Clade's primary SNP
#					Tree position
#				additional rows:
#					Tree position ("R1b1a1a2...")
#					Lowest shared clade ("terminal SNP") 
# Basic report: check and improve swapping of reference positives
# Basic report: check ability to support "rejected" SNPs 	
# Basic report: ability to not automatically flag some SNPs in merge-list
# General: support for FGC test results
# Age analysis: support for archaeological DNA / paper trail limits in the age analysis
# Age analysis: should mutation rate uncertainties be added in quadrature?
#				(Bearing in mind the mutation rate is partly determine from the data)
# General: cross-over with STR ages - need:
#				1. Calibration of STR pipeline
#				2. Port of STR age pipeline to BASH
#				3. SNP-STR tree encoding
#				4. Age analysis merger

# That should be everything you need to set up.
# Let's do stuff.
# Please don't edit below here unless you know what you're doing and/or want to screw something up.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HERE BE DRAGONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ================================== a.k.a. START OF CODE =========================================

# Set start date for timing points

# Note: I believe this needs to be taken out of YAML. keeping her for now.

T0: `date +%s.%N`

# This is the number of columns on the left-hand side of the CSV reports

left_cols: 17

# Use is currently under development

# }}}

